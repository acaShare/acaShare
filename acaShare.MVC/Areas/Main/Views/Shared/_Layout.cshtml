@using System.Security.Claims;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MaterialViewCSS {
    @RenderSection("MaterialViewCSS", false)
}

@section Scripts {
    <script src="~/js/home-list.js"></script>
    @RenderSection("Scripts", false)
}

<div class="row home-container">
    <div class="col s12 m8 l9 home-part">
        <div class="data-container">
            <nav class="colornav">
                <div class="nav-wrapper path-header-wrapper">
                    <div class="col s12 tree-path">
                        @if (ViewBag.IsRoot != null && ViewBag.IsRoot == true)
                        {
                            <a asp-controller="List" asp-action="AvailableUniversities" class="breadcrumb">Uczelnie</a>
                        }

                        @if (ViewBag.Breadcrumbs != null)
                        {
                            @foreach (var breadcrumb in ViewBag.Breadcrumbs)
                            {
                                <a asp-controller="@(breadcrumb.Controller)"
                                   asp-action="@breadcrumb.Action"
                                   asp-all-route-data="@breadcrumb.Params"
                                   class="breadcrumb">
                                    @breadcrumb.Title
                                </a>
                            }
                        }
                    </div>
                </div>
            </nav>

            <main class="home-content">
                @RenderBody()
            </main>
        </div>
    </div>

    @if (IsSectionDefined("SidebarWithComments"))
    {
        @RenderSection("SidebarWithComments")
    }
    else
    {
        <div id="sidebar" class="col s12 m4 l3 right-side-bar">
            <ul id="tabs-swipe-demo" class="tabs tabs-fixed-width">
                <li class="tab"><a href="#test-swipe-1">Ulubione</a></li>
                <li class="tab"><a class="active" href="">Ostatnia aktywność</a></li>
            </ul>
        </div>
        <script>
            window.addEventListener('load', () => {
                let xhr = new XMLHttpRequest();
                let sidebar = document.getElementById('sidebar');
                let div = document.createElement('div');

                xhr.onloadstart = () => {
                    div.innerHTML = '<img src="/images/spinner1.gif" alt="loading-spinner" class="sidebar-spinner" />';
                    sidebar.appendChild(div);
                };

                xhr.onloadend = () => {
                    sidebar.removeChild(div);
                };

                xhr.onload = () => {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        let div = document.createElement('div');
                        div.innerHTML = xhr.responseText;
                        sidebar.appendChild(div);
                        $('.tabs').tabs();
                    }
                };

                xhr.open("GET", `/Main/Test/Invoke?loggedUserId=@User.FindFirstValue(ClaimTypes.NameIdentifier)`, true);
                xhr.send();
            });
        </script>
        @*@await Component.InvokeAsync("Sidebar", new { @loggedUserId = User.FindFirstValue(ClaimTypes.NameIdentifier) })*@
    }
</div>