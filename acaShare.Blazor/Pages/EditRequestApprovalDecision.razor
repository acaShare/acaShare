@page "/Moderator/ModeratorPanel/EditSuggestions/EditRequestApprovalDecision/{EditSuggestionId:int}"
@inject IMaterialsService _service
@inject ISuggestionsService SuggestionsService
@inject IMaterialStateChangeService MaterialStateChangeService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="upper-manage-box">
    <div class="data-container">
        <nav class="colornav">
            <div class="nav-wrapper path-header-wrapper">
                <div class="action-button back-arrow tooltipped" data-position="top" data-tooltip="Wróć do listy sugestii edycji">
                    <NavLink href="/Moderator/ModeratorPanel/EditSuggestions"><i class="material-icons">arrow_back</i></NavLink>
                </div>
                <div class="summary">
                    Podsumowanie sugestii edycji
                </div>
            </div>
        </nav>
        <div class="home-content">
            <div class="material-container">
                <header class="upper-box-header">
                    <div class="upper-box-header-action-buttons">
                        <a @onclick="OnApproveClick"
                           class="sep action-button tooltipped approve-edit-request" data-position="top" data-tooltip="Zatwierdź sugestię">

                            <i class="material-icons lh">check</i>
                        </a>
                        <a @*@onclick="OnApproveForwardClick" *@
                           class="sep action-button tooltipped approve-material" data-position="top" data-tooltip="Zatwierdź i przejdź do materiału">

                            <i class="material-icons lh">subdirectory_arrow_right</i>
                        </a>
                        <a @onclick="ToggleModal"
                           class="sep action-button tooltipped" data-position="top" data-tooltip="Odrzuć sugestię">

                            <i class="material-icons lh">not_interested</i>
                        </a>
                    </div>
                </header>
                <section class="upper-manage-box-content">
                    <h2>Poprzednia nazwa materiału: </h2>
                    <p class="additional-comment">@Decision.EditSuggestion.MaterialName</p>
                    <br />
                    <h2>Podsumowanie zmian: </h2>
                    <p class="additional-comment">
                        @if (string.IsNullOrEmpty(Decision.EditSuggestion.Summary))
                        {
                            @:Brak
                        }
                        else
                        {
                            @Decision.EditSuggestion.Summary
                        }
                    </p>
                </section>
            </div>

            <footer class="material-footer upper-manage-box-footer">
                <p class="material-footer-content">
                    <span>
                        Sugestia utworzona przez: @Decision.EditSuggestion.UpdaterName
                    </span>
                </p>
            </footer>
        </div>
    </div>
</div>

<div class="data-container">
    <nav class="colornav">
        <div class="nav-wrapper path-header-wrapper">
            <div class="col s12 tree-path">
                <a class="breadcrumb">
                    Podgląd zmian
                </a>
            </div>
        </div>
    </nav>

    <div class="home-content">
        <div class="material-container">
            <header class="material-header">
                <h1 class="material-header-title">
                    @Decision.Material.Name
                </h1>
                <div class="material-header-action-buttons">
                    <a @*@onclick="handleShowPreviousMaterialVersion(Decision.Material.MaterialId)" *@
                       class="sep action-button tooltipped" data-position="top" data-tooltip="Pokaż poprzednią wersję">

                        <i class="material-icons lh">history</i>
                    </a>
                </div>
            </header>

            <div class="material-content material-to-approve-content">
                <section class="material-content-files">
                    <div class="files-wrapper">
                        @{
                            int i = 1;
                            foreach (var file in Decision.Material.Files)
                            {
                                if (file.IsImage)
                                {
                                    <div class="material-file material-image" onclick="openModal();currentSlide(@(i++))">
                                        <img src="/_Uploads/@file.RelativePath" alt="@file.FileName-thumbnail" />
                                    </div>
                                }
                                else
                                {
                                    <div class="material-file">
                                        <a href="_Uploads/@file.RelativePath" download="@file.FileName" class="material-file-download">
                                            <i class="material-icons">description</i>
                                        </a>
                                    </div>
                                }
                            }
                        }
                    </div>

                    <!-- The Modal/Lightbox -->
                    <div id="gallery-modal" class="gallery-modal" onclick="closeModalOnBackgroundClick(event)">
                        <div id="current-slide-info" class="current-slide-info"></div>
                        <span class="close" onclick="closeModal()">&times;</span>
                        <div class="modal-content">
                            @foreach (var file in Decision.Material.Files)
                            {
                                if (file.IsImage)
                                {
                                    <div class="gallery-item">
                                        <img src="/_Uploads/@file.RelativePath" alt="@file.FileName" />
                                    </div>
                                }
                            }
                        </div>

                        <!-- Next/previous controls -->
                        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                        <a class="next" onclick="plusSlides(1)">&#10095;</a>
                    </div>
                </section>

                <section>
                    <h2 class="material-content-description-header">
                        Opis
                    </h2>

                    <div class="material-content-description">
                        @Decision.Material.Description
                    </div>
                </section>
            </div>

            <footer class="material-footer">
                <p class="material-footer-content">
                    <span>
                        Autor: @Decision.Material.CreatorUsername
                    </span>

                    <span>
                        @{ var uploadDate = Decision.Material.UploadDate.ToString("d MMMM yyyy, HH:mm");}
                        Dodano: @uploadDate
                    </span>
                </p>
            </footer>
        </div>
    </div>
</div>

<EditModelModal Model="Decision.EditSuggestion" SubmitButtonText="Odrzuć sugestię edycji" OnValidSubmit="OnRejectClick" @ref="Modal">
    <div class="row">
        <div class="col s12">
            <div>
                <label for="Suggestion.DeclineReason">Powód odrzucenia sugestii</label>
                <div class="input-field">
                    <InputText @bind-Value="Decision.EditSuggestion.DeclineReason" class="validate" />
                    <ValidationMessage For="@(() => Decision.EditSuggestion.DeclineReason)" />
                </div>
            </div>
        </div>
    </div>
</EditModelModal>

<ConfirmationDialog @ref="ConfirmationModal">
    Czy na pewno chcesz zatwierdzić tę sugestię edycji?
</ConfirmationDialog>

@code {
    [Parameter]
    public int EditSuggestionId { get; set; }

    private ChangeRequestApprovalDecision Decision;
    private EditModelModal<EditRequestViewModel> Modal { get; set; }
    private ConfirmationDialog ConfirmationModal { get; set; }

    protected override void OnInitialized()
    {
        var editSuggestion = _service.GetEditRequest(EditSuggestionId);

        if (editSuggestion == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.EditSuggestionNotFound}");
        }
        else
        {
            Decision = new ChangeRequestApprovalDecision
            {
                Material = new MaterialToApproveViewModel
                {
                    MaterialId = editSuggestion.MaterialToUpdateId,
                    CreatorUsername = editSuggestion.MaterialToUpdate.Creator.Username,
                    Name = editSuggestion.NewName,
                    Description = editSuggestion.NewDescription,
                    UploadDate = editSuggestion.MaterialToUpdate.UploadDate,
                    Files = editSuggestion.MaterialToUpdate.Files.Select(f =>
                        new FileViewModel
                        {
                            FileId = f.FileId,
                            FileName = f.FileName,
                            RelativePath = f.RelativePath,
                            ContentType = f.ContentType
                        }
                    ).ToList()
                },
                EditSuggestion = new EditRequestViewModel
                {
                    EditRequestId = editSuggestion.EditRequestId,
                    Summary = editSuggestion.Summary,
                    UpdaterName = editSuggestion.Updater.Username,
                    MaterialName = editSuggestion.MaterialToUpdate.Name
                }
            };
        }
    }

    private void OnApproveClick()
    {
        ConfirmationModal.OnSubmit += () => SuggestionsService.OnApproveEditSuggestionClickCallback(new CallbackArgs(Decision.EditSuggestion.EditRequestId));
        ConfirmationModal.ToggleModal();
    }

    private void OnRejectClick()
    {
        SuggestionsService.OnRejectEditSuggestionClickCallback(new RejectSuggestionCallbackArgs(Decision.EditSuggestion.EditRequestId, Decision.EditSuggestion.DeclineReason));
    }

    private void ToggleModal()
    {
        Decision.EditSuggestion.DeclineReason = null;
        Modal.ToggleModal();
    }
}
