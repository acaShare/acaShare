@page "/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId:int}/Departments/{DepartmentId:int}/Edit"
@inject IUniversityTreeTraversalService TraversalService
@inject IUniversityTreeManagementService ManagementService
@inject NavigationManager NavigationManager

<div class="data-container">
    <Breadcrumbs BreadcrumbsItems="@_breadcrumbsItems" />

    <div class="home-content">
        <div class="material-container">
            <EditForm Model="_departmentViewModel" OnValidSubmit="OnEdit" class="col s12">
                <DataAnnotationsValidator />
                <div class="text-danger @_display">Wydział o takiej nazwie lub skrócie już istnieje</div>

                <div>
                    <label for="Model.TitleOrFullName">Nazwa wydziału</label>
                    <div class="input-field">
                        <InputText @bind-Value="_departmentViewModel.TitleOrFullName" @oninput="ClearError" class="validate" />
                        <ValidationMessage For="@(() => _departmentViewModel.TitleOrFullName)" />
                    </div>
                </div>
                <div>
                    <label for="Model.SubtitleOrAbbreviation">Skrót</label>
                    <div class="input-field">
                        <InputText @bind-Value="_departmentViewModel.SubtitleOrAbbreviation" @oninput="ClearError" class="validate" />
                        <ValidationMessage For="@(() => _departmentViewModel.SubtitleOrAbbreviation)" />
                    </div>
                </div>

                <div class="buttons">
                    <button type="submit" class="btn btn-default accept-button">Aktualizuj</button>
                    <NavLink href=@($"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments") class="btn btn-default back-button">
                        <span class="back-button-large">Wróć do listy wydziałów</span>
                        <span class="back-button-small">Cofnij</span>
                    </NavLink>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int UniversityId { get; set; }

    [Parameter]
    public int DepartmentId { get; set; }

    private IReadOnlyCollection<BreadcrumbViewModel> _breadcrumbsItems;
    private BLL.Models.University _university;
    private BLL.Models.Department _department;
    private DepartmentViewModel _departmentViewModel;
    private string _display = "hidden";


    protected override void OnInitialized()
    {
        _department = TraversalService.GetDepartment(DepartmentId);
        if (_department == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.DepartmentNotFound}");
        }

        _departmentViewModel = new DepartmentViewModel
        {
            DepartmentId = _department.DepartmentId,
            TitleOrFullName = _department.Name,
            SubtitleOrAbbreviation = _department.Abbreviation
        };

        _university = _department.University;
        if (_university.UniversityId != UniversityId)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.UniversityNotFound}");
        }

        _breadcrumbsItems = new List<BreadcrumbViewModel>
        {
            new BreadcrumbViewModel("Uczelnie", "/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities"),
            new BreadcrumbViewModel(_university.Name, $"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments"),
            new BreadcrumbViewModel("Edycja wydziału")
        };
    }

    private void OnEdit()
    {
        if (_university == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.UniversityNotFound}");
        }

        if (_department == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.DepartmentNotFound}");
        }

        _department.Update(_departmentViewModel.TitleOrFullName, _departmentViewModel.SubtitleOrAbbreviation);

        bool success = ManagementService.UpdateDepartment(_department);

        if (!success)
        {
            _display = "block";
        }
        else
        {
            NavigationManager.NavigateTo($"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments");
        }
    }

    private void ClearError()
    {
        if (_display != "hidden")
        {
            _display = "hidden";
        }
    }
}
