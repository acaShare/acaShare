@page "/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId:int}/Departments/Add"
@inject IUniversityTreeTraversalService TraversalService
@inject IUniversityTreeManagementService ManagementService
@inject NavigationManager NavigationManager

<div class="data-container">
    <Breadcrumbs BreadcrumbsItems="@_breadcrumbsItems" />

    <div class="home-content">
        <div class="material-container">
            <EditForm Model="_department" OnValidSubmit="OnAdd" class="col s12">
                <DataAnnotationsValidator />
                <div class="text-danger @_display">Wydział o takiej nazwie lub skrócie już istnieje</div>

                <div>
                    <label for="Model.TitleOrFullName">Nazwa wydziału</label>
                    <div class="input-field">
                        <InputText @bind-Value="_department.TitleOrFullName" @oninput="ClearError" class="validate" />
                        <ValidationMessage For="@(() => _department.TitleOrFullName)" />
                    </div>
                </div>
                <div>
                    <label for="Model.SubtitleOrAbbreviation">Skrót</label>
                    <div class="input-field">
                        <InputText @bind-Value="_department.SubtitleOrAbbreviation" @oninput="ClearError" class="validate" />
                        <ValidationMessage For="@(() => _department.TitleOrFullName)" />
                    </div>
                </div>

                <div class="buttons">
                    <button type="submit" class="btn btn-default accept-button">Dodaj</button>
                    <NavLink href=@($"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments") class="btn btn-default back-button">
                        <span class="back-button-large">Wróć do listy wydziałów</span>
                        <span class="back-button-small">Cofnij</span>
                    </NavLink>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int UniversityId { get; set; }

    private IReadOnlyCollection<BreadcrumbViewModel> _breadcrumbsItems;
    private BLL.Models.University _university;
    private DepartmentViewModel _department = new DepartmentViewModel();
    private string _display = "hidden";


    protected override void OnInitialized()
    {
        _university = TraversalService.GetUniversity(UniversityId);
        if (_university == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.UniversityNotFound}");
        }

        _breadcrumbsItems = new List<BreadcrumbViewModel>
        {
            new BreadcrumbViewModel("Uczelnie", "/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities"),
            new BreadcrumbViewModel(_university.Name, $"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments"),
            new BreadcrumbViewModel("Dodawanie wydziału")
        };
    }

    private void OnAdd()
    {
        if (_university == null)
        {
            NavigationManager.NavigateTo($"ResourceNotFound/{Errors.UniversityNotFound}");
        }

        var departmentToAdd = new BLL.Models.Department(_department.TitleOrFullName, _department.SubtitleOrAbbreviation, _university);

        var success = ManagementService.AddDepartment(departmentToAdd);

        if (!success)
        {
            _display = "block";
        }
        else
        {
            NavigationManager.NavigateTo($"/Moderator/ModeratorPanel/UniversitiesStructureManagement/Universities/{UniversityId}/Departments");
        }
    }

    private void ClearError()
    {
        if (_display != "hidden")
        {
            _display = "hidden";
        }
    }
}
